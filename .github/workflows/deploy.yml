name: Deploy Apex Tattooz WordPress

on:
  push:
    branches: [ main ]
    paths:
      - 'wordpress/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔑 Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 🌐 Add Server to Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: 💾 Create Backup
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "
            cd ${{ secrets.WP_PATH }}/wp-content
            
            # Create backup directory if it doesn't exist
            mkdir -p ../backups
            
            # Backup themes
            if [ -d 'themes/apex-tattooz' ]; then
              echo '📦 Creating theme backup...'
              tar -czf ../backups/theme-backup-$(date +%Y%m%d-%H%M%S).tar.gz themes/apex-tattooz/
            fi
            
            # Backup custom plugins
            if [ -d 'plugins/apex-custom' ]; then
              echo '📦 Creating plugin backup...'  
              tar -czf ../backups/plugin-backup-$(date +%Y%m%d-%H%M%S).tar.gz plugins/apex-custom/
            fi
            
            # Keep only last 5 backups
            cd ../backups
            ls -t *.tar.gz | tail -n +6 | xargs -r rm --
          "

      - name: 🚀 Deploy Theme Files
        if: contains(github.event.head_commit.modified, 'wordpress/themes/') || contains(github.event.head_commit.added, 'wordpress/themes/')
        run: |
          echo "🎨 Deploying theme files..."
          rsync -avz --delete \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='.DS_Store' \
            --exclude='*.log' \
            wordpress/themes/ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.WP_PATH }}/wp-content/themes/

      - name: 🔌 Deploy Plugin Files  
        if: contains(github.event.head_commit.modified, 'wordpress/plugins/') || contains(github.event.head_commit.added, 'wordpress/plugins/')
        run: |
          echo "🔌 Deploying plugin files..."
          rsync -avz --delete \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='.DS_Store' \
            --exclude='*.log' \
            wordpress/plugins/ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.WP_PATH }}/wp-content/plugins/

      - name: 🔐 Set Correct Permissions
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "
            echo '🔐 Setting file permissions...'
            
            # Theme permissions
            if [ -d '${{ secrets.WP_PATH }}/wp-content/themes/apex-tattooz' ]; then
              chown -R www-data:www-data ${{ secrets.WP_PATH }}/wp-content/themes/apex-tattooz/
              find ${{ secrets.WP_PATH }}/wp-content/themes/apex-tattooz/ -type d -exec chmod 755 {} \\;
              find ${{ secrets.WP_PATH }}/wp-content/themes/apex-tattooz/ -type f -exec chmod 644 {} \\;
            fi
            
            # Plugin permissions  
            if [ -d '${{ secrets.WP_PATH }}/wp-content/plugins/apex-custom' ]; then
              chown -R www-data:www-data ${{ secrets.WP_PATH }}/wp-content/plugins/apex-custom/
              find ${{ secrets.WP_PATH }}/wp-content/plugins/apex-custom/ -type d -exec chmod 755 {} \\;
              find ${{ secrets.WP_PATH }}/wp-content/plugins/apex-custom/ -type f -exec chmod 644 {} \\;
            fi
          "

      - name: 🧹 Clear WordPress Cache
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "
            echo '🧹 Clearing WordPress cache...'
            
            # WP-CLI cache clear (if available)
            if command -v wp &> /dev/null; then
              cd ${{ secrets.WP_PATH }}
              wp cache flush --allow-root 2>/dev/null || echo 'WP-CLI cache clear failed or not available'
            fi
            
            # Clear common cache directories
            rm -rf ${{ secrets.WP_PATH }}/wp-content/cache/*
            rm -rf ${{ secrets.WP_PATH }}/wp-content/uploads/cache/*
            
            # Clear opcache if PHP-FPM is running
            if pgrep -x 'php-fpm' > /dev/null; then
              echo 'Reloading PHP-FPM to clear opcache...'
              systemctl reload php*-fpm 2>/dev/null || echo 'PHP-FPM reload failed or not available'
            fi
          "

      - name: ✅ Deployment Success
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "📊 Deployment Summary:"
          echo "- Repository: ${{ github.repository }}"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Author: ${{ github.event.head_commit.author.name }}"
          echo "- Message: ${{ github.event.head_commit.message }}"

      - name: 🚨 Notify on Failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          echo "Please check the logs above for details."
          echo "Backups are available on the server if rollback is needed."